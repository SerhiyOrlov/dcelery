version: '3.8'

services:

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  redis:
    image: redis:7.0.11-alpine

  django:
    container_name: dcelery-django
    build:
      context: ./app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app:/usr/src/app/
    ports:
      - '8001:8000'
    env_file:
      - .env
    depends_on:
      - redis

  celery:
    container_name: dcelery-celery1
    build:
      context: ./app
      dockerfile: Dockerfile
    # Run celery worker
    # --app - A django app where celery.py is lcated
    # -l INFO - Setting the loging level
    # Options: DEBUG | INFO | WARNING | ERROR | CRITICAL | FATAL
    command: celery --app=config worker -l INFO -Q tasks
    volumes:
      - ./app:/usr/src/app/
    env_file:
      - .env
    depends_on:
      - redis
      - django
      - rabbitmq

#  celery2:
#    container_name: celery2
#    build:
#      context: ./app/celeryworker
#      dockerfile: Dockerfile
#    # Run celery worker
#    # --app - A django app where celery.py is lcated
#    # -l INFO - Setting the loging level
#    # Options: DEBUG | INFO | WARNING | ERROR | CRITICAL | FATAL
#    command: celery --app=celerytask worker -l INFO -Q queue2
#    volumes:
#      - ./app/celeryworker:/usr/src/app/
#    depends_on:
#    - redis
#    - django